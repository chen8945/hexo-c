const cdn={gh:{jsdelivr:"https://cdn.jsdelivr.net/gh",fastly:"https://fastly.jsdelivr.net/gh",gcore:"https://gcore.jsdelivr.net/gh",testingcf:"https://testingcf.jsdelivr.net/gh",test1:"https://test1.jsdelivr.net/gh",tianli:"https://cdn1.tianli0.top/gh",jjz:"https://jsd.onmicrosoft.cn/gh",jnt:"https://cdn.bilicdn.tk/gh"},combine:{jsdelivr:"https://cdn.jsdelivr.net/combine",fastly:"https://fastly.jsdelivr.net/combine",gcore:"https://gcore.jsdelivr.net/combine",testingcf:"https://testingcf.jsdelivr.net/combine",test1:"https://test1.jsdelivr.net/combine",tianli:"https://cdn1.tianli0.top/combine",jjz:"https://jsd.onmicrosoft.cn/combine",jnt:"https://cdn.bilicdn.tk/combine"},npm:{jsdelivr:"https://cdn.jsdelivr.net/npm",fastly:"https://fastly.jsdelivr.net/npm",gcore:"https://gcore.jsdelivr.net/npm",testingcf:"https://testingcf.jsdelivr.net/npm",test1:"https://test1.jsdelivr.net/npm",eleme:"https://npm.elemecdn.com",eleme2:"https://github.elemecdn.com",unpkg:"https://unpkg.com",tianli:"https://cdn1.tianli0.top/npm",jjz:"https://jsd.onmicrosoft.cn/npm",jnt:"https://cdn.bilicdn.tk/npm",sourceg:"https://npm.sourcegcdn.com",adn:"https://adn.arcitcgn.cn/npm"}};async function progress(t){return new Response(await t.arrayBuffer(),{status:t.status,headers:t.headers})}function handleRequest(t){const e=[],n=t.url;let s=new URL(n);const i=s.pathname.split("/")[1];for(const t in cdn)if(t===i)for(const n in cdn[t]){const c=cdn[t][n]+s.pathname.replace("/"+i,"");e.push(c)}if(e.length)return fetchAny(e);throw new Error("failure")}function createPromiseAny(){Promise.any=function(t){return new Promise(((e,n)=>{let s=(t=Array.isArray(t)?t:[]).length,i=[];if(0===s)return n(new AggregateError("All promises were rejected"));t.forEach((t=>{t instanceof Promise?t.then((t=>e(t)),(t=>{s--,i.push(t),0===s&&n(new AggregateError(i))})):n(t)}))}))}}function fetchAny(t){const e=new AbortController,n=e.signal,s=t.map((t=>new Promise(((s,i)=>{fetch(t,{signal:n}).then(progress).then((t=>{const n=t.clone();200!==n.status&&i(null),e.abort(),s(n)})).catch((()=>i(null)))}))));return Promise.any||createPromiseAny(),Promise.any(s).then((t=>t)).catch((()=>null))}self.addEventListener("install",(async()=>{await self.skipWaiting()})),self.addEventListener("activate",(async()=>{await self.clients.claim()})),self.addEventListener("fetch",(async t=>{try{const e=navigator,{saveData:n,effectiveType:s}=e.connection||e.mozConnection||e.webkitConnection||{};if(n||/2g/.test(s))return;t.respondWith(handleRequest(t.request))}catch(t){}}));